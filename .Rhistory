runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
iris
penguins
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
citation("shinydashboard")
citation(plotrix)
citation("plotrix")
runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
install.packages("remotes")
remotes::install_github("uc-cfss/rcfss")
shiny::runApp('GitHub/Data_Science_App')
devtools::install_github("rstudio/EDAWR")
runApp('GitHub/Data_Science_App')
runApp('GitHub/Data_Science_App')
runApp('Internship/Machine Learning.R')
runApp('GitHub/Data_Science_App')
runApp('GitHub/Data_Science_App')
runApp('Internship/Machine Learning.R')
rm
rm(list = ls())
library(shiny); runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
library(shiny); runApp('Internship/Machine Learning.R')
shiny::runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
runApp()
runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Data_Science_App')
runApp('~/GitHub/Venn_Diagrams')
shiny::runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
runApp('Internship/Machine Learning.R')
runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
runApp()
runApp('GitHub/Venn_Diagrams')
runApp()
runApp('GitHub/Venn_Diagrams')
runApp('GitHub/Venn_Diagrams')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
library(shiny); runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
shiny::runApp('GitHub/Data_Science_App')
runApp('GitHub/Data_Science_App')
library(shiny)
ui <- fluidPage(
shiny::tabPanel(value = 'tab1', title = 'Data page',
br(),
shiny::actionButton("btn", "Refresh!"),
br(),
shiny::verbatimTextOutput("out")
)
)
library(shiny)
ui <- fluidPage(
shiny::tabPanel(value = 'tab1', title = 'Data page',
br(),
shiny::actionButton("btn", "Refresh!"),
br(),
shiny::verbatimTextOutput("out")
)
)
server <- function(input, output, session) {
curr_date <- shiny::eventReactive(input$btn, {
format(Sys.Date(), "%c")
})
output$out <- shiny::renderText({
print(curr_date())
})
}
shinyApp(ui, server)
runApp('GitHub/Data_Science_App')
runApp()
runApp('GitHub/Data_Science_App')
runApp()
runApp('GitHub/Data_Science_App')
disable("check1")
runApp('GitHub/Data_Science_App')
runApp('~/GitHub/Venn_Diagrams')
runApp('~/GitHub/Data_Science_App')
runApp('GitHub/Data_Science_App')
citation("dplyr")
citation("knitr")
citation("datasets")
citation("rmarkdown")
citation("learnr")
citation("rcfss")
citations("knitr")
citation("knitr")
runApp('GitHub/Data_Science_App')
runApp('GitHub/Data_Science_App')
runApp('GitHub/Data_Science_App')
runApp('GitHub/Data_Science_App')
runApp('GitHub/Data_Science_App')
runApp('GitHub/Data_Science_App')
runApp('GitHub/Data_Science_App')
runApp('GitHub/Data_Science_App')
runApp('GitHub/Data_Science_App')
runApp('GitHub/Data_Science_App')
runApp('GitHub/Data_Science_App')
runApp('GitHub/Data_Science_App')
runApp('GitHub/Data_Science_App')
runApp('GitHub/Data_Science_App')
shiny::runApp('GitHub/Data_Science_App')
runApp('GitHub/Data_Science_App')
shiny::runApp('GitHub/Data_Science_App')
runApp('GitHub/Data_Science_App')
runApp('GitHub/Data_Science_App')
runApp('GitHub/Data_Science_App')
runApp('GitHub/Data_Science_App')
runApp('GitHub/Data_Science_App')
runApp('GitHub/Data_Science_App')
runApp('GitHub/Data_Science_App')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
iris
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
shinyApp(ui, server)
ui <- fluidPage(
p("The checkbox group controls the select input"),
checkboxGroupInput("inCheckboxGroup", "Input checkbox",
c("Item A", "Item B", "Item C")),
selectInput("inSelect", "Select input",
c("Item A", "Item B", "Item C"))
)
server <- function(input, output, session) {
observe({
x <- input$inCheckboxGroup
# Can use character(0) to remove all choices
if (is.null(x))
x <- character(0)
# Can also set the label and select items
updateSelectInput(session, "inSelect",
label = paste("Select input label", length(x)),
choices = x,
selected = tail(x, 1)
)
})
}
shinyApp(ui, server)
ui <- fluidPage(
p("The checkbox group controls the select input"),
checkboxGroupInput("inCheckboxGroup", "Input checkbox",
c("Item A", "Item B", "Item C")),
selectInput("inSelect", "Select input",
choices = c("Item A", "Item B", "Item C"))
)
shinyApp(ui, server)
shinyApp(ui, server)
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
penguins
runApp('Internship/Machine Learning.R')
# Load Packages
library(shiny)
library(shinydashboard)
library(shinyBS)
devtools::install_github("EducationShinyAppTeam/boastUtils")
runApp('Internship/Sample_App.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
library(shiny); runApp('Internship/Machine Learning.R')
penguins
penguins[,-6]
penguins[,sex]
penguins[,'sex']
penguins[,-'sex']
penguins[, names(penguins) != 'sex']
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
parse(text = paste("input$", predictionVariable))
parse(text = paste("input$", "predictionVariable"))
runApp('Internship/Machine Learning.R')
parse(text = paste("input$", "predictionVariable", sep = ""))
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
penguins
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
install.packages("xgboost")
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
penguins['labels']
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
runApp('Internship/Machine Learning.R')
load.csv("marketing.csv")
setwd("C://Users//Ethan Wright//Documents//Internship")
load.csv("marketing.csv")
read.csv("marketing.csv")
marketingData <- read.csv("marketing.csv")
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
sample(n,floor(0.75*n))
sample(nrow(iris),floor(0.75*n))
sample(nrow(iris),floor(0.75*nrow(iris)))
label[sample(nrow(iris),floor(0.75*nrow(iris)))]
species <- iris$Species
label = as.integer(iris$Species)-1
label
iris$Species = NULL
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('~/GitHub/Machine-Learning-Training-vs-Validation/Machine Learning.R')
train.label = label[train.index]
train.index = sample(n,floor(0.75*n))
n<-nrow(iris)
train.index = sample(n,floor(0.75*n))
train.index
class(train.index)
runApp('~/GitHub/Machine-Learning-Training-vs-Validation/Machine Learning.R')
runApp('~/GitHub/Machine-Learning-Training-vs-Validation/Machine Learning.R')
runApp('~/GitHub/Machine-Learning-Training-vs-Validation/Machine Learning.R')
runApp('Machine Learning.R')
runApp('~/GitHub/Machine-Learning-Training-vs-Validation/Machine Learning.R')
runApp('~/GitHub/Machine-Learning-Training-vs-Validation/Machine Learning.R')
iris
runApp('~/GitHub/Machine-Learning-Training-vs-Validation/Machine Learning.R')
iris$Species
data(iris)
iris
rm(list = ls())
runApp('~/GitHub/Machine-Learning-Training-vs-Validation/Machine Learning.R')
runApp('~/GitHub/Machine-Learning-Training-vs-Validation/Machine Learning.R')
runApp('~/GitHub/Machine-Learning-Training-vs-Validation/Machine Learning.R')
runApp('~/GitHub/Machine-Learning-Training-vs-Validation/Machine Learning.R')
runApp('Machine Learning.R')
runApp('~/GitHub/Machine-Learning-Training-vs-Validation/Machine Learning.R')
as.integer(iris$Species)-1
runApp('~/GitHub/Machine-Learning-Training-vs-Validation/Machine Learning.R')
runApp('~/GitHub/Machine-Learning-Training-vs-Validation/Machine Learning.R')
as.integer(iris$Species)
runApp('~/GitHub/Machine-Learning-Training-vs-Validation/Machine Learning.R')
iris
runApp('~/GitHub/Machine-Learning-Training-vs-Validation/Machine Learning.R')
runApp('~/GitHub/Machine-Learning-Training-vs-Validation/Machine Learning.R')
runApp('~/GitHub/Machine-Learning-Training-vs-Validation/Machine Learning.R')
library(shiny); runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('~/GitHub/Overfitting')
runApp('~/GitHub/Machine-Learning-Training-vs-Validation/Machine Learning.R')
library(shiny); runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
names(drinkData)[names(drinkData) == "ï..Factor"] <- "food"
#22
drinkData <- read.csv(file = "C:\\Users\\Ethan Wright\\Documents\\Spring 2020 Semester\\STAT 461\\Num22.csv")
names(drinkData)[names(drinkData) == "ï..Factor"] <- "food"
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
#22
drinkData <- read.csv(file = "C:\\Users\\Ethan Wright\\Documents\\Spring 2020 Semester\\STAT 461\\Num22.csv")
names(drinkData)[names(drinkData) == "ï..Factor"] <- "food"
setwd("~/GitHub/Machine-Learning-Training-vs-Validation")
dataset <- read.csv("HeartDiseaseData.csv")
names(dataset)
setwd("~/GitHub/Machine-Learning-Training-vs-Validation")
names(dataset)[names(dataset) == "ï..age"] <- "age"
names(dataset)
names(dataset)[names(dataset) == "ï..age"] <- "age"
runApp('Machine Learning.R')
runApp('Machine Learning.R')
runApp('Machine Learning.R')
rnorm(10,0,1.5)
runif(10,-2,2)
